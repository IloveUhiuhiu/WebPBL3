@model WebPBL3.DTO.OrderDTO;
@{
    ViewData["Title"] = "Tạo đơn hàng";
    Layout = "_AdminLayout";
    double totalPrice = 0;
}
<div class="card shadow border-0">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">Tạo hóa đơn</h2>
            </div>
        </div>
    </div>
    <form id="myForm" method="post">
        <div class="row p-3">
            <div class="col-lg-6 row">
                <div class="col-12">
                    <h4>Thông tin khách hàng</h4>
                </div>
                <div class="col-12" style="font-size: 15px">
                    <p>(Khách hàng đã có tài khoản. Nhập địa chỉ email: <input id="txtSearch" name="existEmail" placeholder="Email" type="email" /> )</p>
                </div>
                <div class="col-6 mb-2">
                    <label asp-for="FullName"></label>
                    <input asp-for="FullName" value="@Model?.FullName" type="text" class="form-control">
                </div>
                <div class="col-6 mb-2">
                    <label asp-for="IdentityCard"></label>
                    <input asp-for="IdentityCard" value="@Model?.IdentityCard" class="form-control">
                </div>
                <div class="col-6 mb-2">
                    <label asp-for="PhoneNumber"></label>
                    <input asp-for="PhoneNumber" value="@Model?.PhoneNumber" class="form-control">
                </div>
                <div class="col-6 mb-2">
                    <label asp-for="Email"></label>
                    <input asp-for="Email" value="@Model?.Email" class="form-control">
                </div>
                <div class="col-6 mb-2">
                    <label>Địa chỉ</label>
                    <input placeholder="Số nhà, đường" class="form-control" id="street" asp-for="Address">
                </div>
                <div class="col-6 mb-2">
                    <label>&nbsp;</label>
                    <div>
                        <select class="form-select form-control" id="city" asp-for="ProvinceID">
                            <option value="" selected>Tỉnh thành</option>
                        </select>
                    </div>
                </div>
                <div class="col-6 mb-2">
                    <select class="form-select form-control" id="district" asp-for="DistrictID">
                        <option value="" selected>Quận huyện</option>
                    </select>
                </div>
                <div class="col-6 mb-2">
                    <select class="form-select form-control" id="ward" asp-for="WardID">
                        <option value="" selected>Xã phường</option>
                    </select>
                </div>
                <div class="col-12 mt-3">
                    <h4>Thêm sản phẩm</h4>
                </div>
                    <div class="row align-items-end col-12">
                        <div class="col-4">
                            <label>Mã xe</label>
                            <input name="CarID" class="form-control">
                        </div>
                        <div class="col-4">
                            <label>Số luọng</label>
                            <input name="quantity" class="form-control">
                        </div>
                        <div class="col-2">
                            <button type="submit" onclick="submitForm('@Url.Action("AddItem", "Order")')" class="btn btn-success mr-2">Thêm ô tô</button>
                        </div>
                    </div>
            </div>
            <div class="col-lg-6">
                <div class="col-12">
                    <h4>Thông tin đơn hàng</h4>
                </div>
                <div class="form-group col-12 row">
                    <label class="col-4">Ngày tạo đơn hàng: </label>
                    <div class="col-4">
                        <input type="date" asp-for="Date" class="form-control">
                    </div>
                </div>
                <table class="table table-striped col-12 p-2">
                    <thead>
                        <tr>
                            <th>
                                STT
                            </th>
                            <th>
                                Tên xe
                            </th>
                            <th>
                                Số lượng
                            </th>
                            <th>
                                Đơn giá
                            </th>
                            <th>
                                Thành tiền
                            </th>
                            <th>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.items.Count != 0)
                        {
                            int count = 0;
                            foreach (var car in Model.items)
                            {
                                totalPrice += car.price * car.quantity;
                                <tr>
                                    <input asp-for="items[count].CarID" hidden />
                                    <input asp-for="items[count].CarName" hidden />
                                    <input asp-for="items[count].price" hidden />
                                    <input asp-for="items[count].quantity" hidden />
                                    <td>@(++count)</td>
                                    <td>@car.CarName</td>
                                    <td>@car.quantity</td>
                                    <td>@car.price.ToString("C", new System.Globalization.CultureInfo("vi-VN"))</td>
                                    <td>@((car.price * car.quantity).ToString("C", new System.Globalization.CultureInfo("vi-VN")))</td>
                                    <td>
                                        <a class="btn btn-danger delete-item" data-car-id="@car.CarID">
                                            <i class="fa-solid fa-trash"></i>
                                            Xóa
                                        </a>
                                    </td>
                                </tr>
                            }
                            <input asp-for="Totalprice" value="@totalPrice" hidden />
                        }
                    </tbody>
                </table>
                <div class="col-12 text-end">
                    <h5 style="text-align: end">Tổng tiền: @totalPrice.ToString("C", new System.Globalization.CultureInfo("vi-VN"))</h5>
                </div>
                <div class="col-12 row mt-2">
                    <label class="col-5">Trạng thái thanh toán:</label>
                    <select class=" col-4 form-select form-select" asp-for="Status">
                        <option value=" " selected>Tình trạng</option>
                        <option value="Đã thanh toán">Đã thanh toán</option>
                        <option value="Chưa thanh toán">Chưa thanh toán</option>
                    </select>
                </div>

            </div>
        </div>
        <div class="row col-12 d-flex justify-content-center mt-4">
            <button type="submit" onclick="submitForm('@Url.Action("Create", "Order")')" class="btn btn-primary col-3 mr-2">Tạo hóa đơn</button>
            <a asp-action="Index" asp-controller="Order" class="btn btn-danger col-3">Hủy</a>
        </div>
    </form>
</div>

<script>
    
    var cities = document.getElementById("city");
    var districts = document.getElementById("district");
    var wards = document.getElementById("ward");
    var address = document.getElementById("address");
    var street = document.getElementById("street");
    function submitForm(action) {
        document.getElementById('myForm').action = action;
        document.getElementById('myForm').submit();
    }
        var deleteItems = document.querySelectorAll(".delete-item");
        deleteItems.forEach(item => {
            item.addEventListener('click', (e) => {
                e.preventDefault();
                const carId = e.target.getAttribute('data-car-id');
                const form = document.getElementById('myForm');
                const hiddenInput = document.createElement('input');
                hiddenInput.type = 'hidden';
                hiddenInput.name = 'delItemId';
                hiddenInput.value = carId;
                form.appendChild(hiddenInput);
                submitForm('/Order/DeleteItem');
            })
        })
    async function getData() {
        try {
            const response = await fetch("/Order/GetProvince");
            const data = await response.json();
            console.log(data);
            return data;
        } catch (error) {
            alert('Loi fetch api: ', error);
        }
    }
    async function getDistrict(id) {
        try {
            const response = await fetch(`/Order/GetDistrict/${id}`);
            const data = await response.json();
            console.log(data);
            return data;
        } catch (error) {
            alert('Loi fetch api: ', error);
        }
    }
    async function getWard(id) {
        try {
            const response = await fetch(`/Order/GetWard/${id}`);
            const data = await response.json();
            console.log(data);
            return data;
        } catch (error) {
            alert('Loi fetch api: ', error);
        }
    }
    async function renderCities() {
        const res = await getData();
        res.forEach(city => {
            cities.options[cities.options.length] = new Option(city.provinceName, city.provinceID);
        });
        if('@Model.ProvinceID'&&'@Model.ProvinceID'!=='0'){
            cities.value = @Model.ProvinceID;
            const listDistrict = await getDistrict(cities.value);
            listDistrict.forEach(district => {
                districts.options[districts.options.length] = new Option(district.name, district.id);
            });
        }
        cities.addEventListener('change', async () => {
            districts.options.length = 1;
            wards.options.length = 1;
            const listDistrict = await getDistrict(cities.value);
               listDistrict.forEach(district => {
                    districts.options[districts.options.length] = new Option(district.name, district.id);
              });
        })
        districts.addEventListener('change', async () => {
            wards.options.length = 1;
            const listWard = await getWard(districts.value);
            listWard.forEach(ward => {
                wards.options[wards.options.length] = new Option(ward.name, ward.id);
            });
        })
        if('@Model.DistrictID'!=='0'){
            districts.value = @Model.DistrictID;
            const listWard = await getWard(districts.value);
            listWard.forEach(ward => {
                wards.options[wards.options.length] = new Option(ward.name, ward.id);
            });
        }
        if ('@Model.WardID' !== '0') {
            wards.value = @Model.WardID;
        }
    }
    renderCities();
    document.getElementById("txtSearch").addEventListener("keydown", function (event) {
        event.preventDefault();
        if (event.keyCode === 13) {
            var url = '@Url.Action("ExtractEmail", "Order")'
            document.getElementById('myForm').action = url;
            document.getElementById('myForm').submit();
        }
    });
 </script>